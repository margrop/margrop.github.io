<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.margrop.net</id>
    <title>魔都水滴</title>
    <updated>2023-07-08T02:28:35.726Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.margrop.net"/>
    <link rel="self" href="https://blog.margrop.net/atom.xml"/>
    <subtitle>A Programmer, A Javaer, A Father, A Geeker, A Huster, A Acmer, A Wower, A Player</subtitle>
    <logo>https://blog.margrop.net/images/avatar.png</logo>
    <icon>https://blog.margrop.net/favicon.ico</icon>
    <rights>All rights reserved 2023, 魔都水滴</rights>
    <entry>
        <title type="html"><![CDATA[ProxmoxVE 7.4升级到8.0，详细步骤]]></title>
        <id>https://blog.margrop.net/post/pve-7-upgrade-to-8/</id>
        <link href="https://blog.margrop.net/post/pve-7-upgrade-to-8/">
        </link>
        <updated>2023-07-08T02:25:13.000Z</updated>
        <summary type="html"><![CDATA[<p>#第一步：详细阅读官方文档<br>
https://pve.proxmox.com/wiki/Upgrade_from_7_to_8</p>
<p>#第二步：升级到最新的 7.4 版本</p>
<pre><code>apt update -y &amp;&amp; apt dist-upgrade -y

sed -i_orig &quot;s/data.status === 'Active'/true/g&quot; /usr/share/pve-manager/js/pvemanagerlib.js
sed -i_orig &quot;s/if (res === null || res === undefined || \!res || res/if(/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
sed -i_orig &quot;s/.data.status.toLowerCase() !== 'active'/false/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
systemctl restart pveproxy

pveversion
</code></pre>
<p>最新的版本是 7.4.15</p>
]]></summary>
        <content type="html"><![CDATA[<p>#第一步：详细阅读官方文档<br>
https://pve.proxmox.com/wiki/Upgrade_from_7_to_8</p>
<p>#第二步：升级到最新的 7.4 版本</p>
<pre><code>apt update -y &amp;&amp; apt dist-upgrade -y

sed -i_orig &quot;s/data.status === 'Active'/true/g&quot; /usr/share/pve-manager/js/pvemanagerlib.js
sed -i_orig &quot;s/if (res === null || res === undefined || \!res || res/if(/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
sed -i_orig &quot;s/.data.status.toLowerCase() !== 'active'/false/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
systemctl restart pveproxy

pveversion
</code></pre>
<p>最新的版本是 7.4.15</p>
<!-- more -->
<p>#第三步：检查是否有兼容性问题</p>
<pre><code>pve7to8
</code></pre>
<p>#第四步：备份并替换Debian源</p>
<pre><code>cp /etc/apt/sources.list /etc/apt/sources.list_bak
sed -i 's/bullseye/bookworm/g' /etc/apt/sources.list
</code></pre>
<p>#第五步：备份并新增PVE8升级源</p>
<pre><code>cp /etc/apt/sources.list.d/pve-install-repo.list /etc/apt/sources.list.d/pve-install-repo.list_bak
sed -i -e 's/bullseye/bookworm/g' /etc/apt/sources.list.d/pve-install-repo.list
</code></pre>
<p>#第六步：CEPH需要，这里略</p>
<p>#第七步：开始正式升级</p>
<pre><code>apt update
apt dist-upgrade
</code></pre>
<p>升级中会出现一些交互界面，下面是官网的建议</p>
<pre><code>/etc/issue -&gt; Proxmox VE will auto-generate this file on boot, and it has only cosmetic effects on the login console.
Using the default &quot;No&quot; (keep your currently-installed version) is safe here.

/etc/lvm/lvm.conf -&gt; Changes relevant for Proxmox VE will be updated, and a newer config version might be useful.
If you did not make extra changes yourself and are unsure it's suggested to choose &quot;Yes&quot; (install the package maintainer's version) here.

/etc/ssh/sshd_config -&gt; If you have not changed this file manually, the only differences should be a replacement of ChallengeResponseAuthentication no with KbdInteractiveAuthentication no and some irrelevant changes in comments (lines starting with #).
If this is the case, both options are safe, though we would recommend installing the package maintainer's version in order to move away from the deprecated ChallengeResponseAuthentication option. If there are other changes, we suggest to inspect them closely and decide accordingly.

/etc/default/grub -&gt; Here you may want to take special care, as this is normally only asked for if you changed it manually, e.g., for adding some kernel command line option.
It's recommended to check the difference for any relevant change, note that changes in comments (lines starting with #) are not relevant.
If unsure, we suggested to selected &quot;No&quot; (keep your currently-installed version)
</code></pre>
<p>#第八步：去掉未订阅提示</p>
<pre><code>sed -i_orig &quot;s/data.status === 'Active'/true/g&quot; /usr/share/pve-manager/js/pvemanagerlib.js
sed -i_orig &quot;s/if (res === null || res === undefined || \!res || res/if(/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
sed -i_orig &quot;s/.data.status.toLowerCase() !== 'active'/false/g&quot; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js
systemctl restart pveproxy
</code></pre>
<p>#Q&amp;A<br>
Q: 提示【Upgrade wants to remove package 'proxmox-ve' 】<br>
A: 在升级前尝试执行【apt remove linux-image-amd64】</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[TVBOX 长期维护apk下载地址和接口]]></title>
        <id>https://blog.margrop.net/post/tvbox-apk-download-and-interface/</id>
        <link href="https://blog.margrop.net/post/tvbox-apk-download-and-interface/">
        </link>
        <updated>2023-07-03T13:11:04.000Z</updated>
        <content type="html"><![CDATA[<h1 id="tvbox下载地址">TVBOX下载地址</h1>
<ul>
<li><a href="https://github.com/o0HalfLife0o/TVBoxOSC/releases">TVBoxOSC</a><br>
<a href="https://github.com/o0HalfLife0o/TVBoxOSC/releases">https://github.com/o0HalfLife0o/TVBoxOSC/releases</a></li>
<li><a href="https://www.right.com.cn/forum/thread-8248608-1-1.html">大佬TVBox</a><br>
下载:<a href="https://www.lanzoul.com/iANk409bj7fc">https://www.lanzoul.com/iANk409bj7fc</a> 密码:5q1m</li>
</ul>
<h1 id="以下接口来自肥猫收集肥猫官网">以下接口来自肥猫收集（肥猫官网）</h1>
<p>https://xn--z7x900a.love</p>
<h1 id="肥猫">肥猫​</h1>
<p>http://我不是.肥猫.love:63/接口禁止贩卖</p>
<h1 id="饭太硬">饭太硬</h1>
<p>http://饭太硬.top/tv</p>
<h1 id="云星">云星</h1>
<p>http://itvbox.cc/tvbox/云星日记/1.m3u8</p>
<h1 id="神器">神器</h1>
<p>https://神器每日推送.tk/pz.json</p>
<h1 id="莱尼丝">莱尼丝</h1>
<p>https://tvbox.cainisi.cf</p>
<h1 id="fongmi">FongMi</h1>
<p>https://ghproxy.com/raw.githubusercontent.com/FongMi/CatVodSpider/main/json/config.json</p>
<h1 id="巧儿">巧儿</h1>
<p>http://pandown.pro/tvbox/tvbox.json</p>
<h1 id="俊哥">俊哥</h1>
<p>http://home.jundie.top:81/top98.json</p>
<h1 id="小雅">小雅</h1>
<p>http://drpy.site/js1</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[电视盒子TVBox takagen99版，v20230307_2315 (附最新接口地址)]]></title>
        <id>https://blog.margrop.net/post/tvbox-takagen99-v20230307/</id>
        <link href="https://blog.margrop.net/post/tvbox-takagen99-v20230307/">
        </link>
        <updated>2023-07-03T13:09:41.000Z</updated>
        <summary type="html"><![CDATA[<p>开源，免费，自行配置接口，直播、点播两用，安卓设备。</p>
<p>takagen99版拥有全新UI外观、功能更加丰富，支持挂载WebDav和本地盘，播放器显示分辨率、网速、时间屏显等功能。<br>
二、TVbox使用教程<br>
首页点击“设置”，选择“配置地址”，输入”数据源地址“，开启存储权限，“确定”后选择数据源，然后就可以使用了。</p>
]]></summary>
        <content type="html"><![CDATA[<p>开源，免费，自行配置接口，直播、点播两用，安卓设备。</p>
<p>takagen99版拥有全新UI外观、功能更加丰富，支持挂载WebDav和本地盘，播放器显示分辨率、网速、时间屏显等功能。<br>
二、TVbox使用教程<br>
首页点击“设置”，选择“配置地址”，输入”数据源地址“，开启存储权限，“确定”后选择数据源，然后就可以使用了。</p>
<!-- more -->
<p>三、TvBox 接口配置<br>
（时间长了，部分接口可能会失效，欢迎反馈！）<br>
https://dxawi.github.io/0/0.json<br>
https://download.kstore.space/download/2863/01.txt<br>
https://liu673cn.github.io/box/m.json<br>
https://raw.liucn.cc/box/m.json<br>
https://raw.liucn.cc/box/xiaopingguo.json<br>
http://52bsj.vip:81/api/v3/file/get/29899/box2.json?sign=3cVyKZQr3lFAwdB3HK-A7h33e0MnmG6lLB9oWlvSNnM%3D%3A0<br>
https://raw.githubusercontent.com/chengxueli818913/maoTV/main/44.txt&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow ugc&quot;&gt;https://ghproxy.com/https://raw.githubusercontent.com/chengxueli818913/maoTV/main/44.txt<br>
https://cdn.jsdelivr.net/gh/chengxueli818913/maoTV@main/44.txt<br>
https://freed.yuanhsing.cf/TVBox/meowcf.json<br>
https://notabug.org/imbig66/tv-spider-man/raw/master/配置/0801.json<br>
http://js.134584.xyz/json/pp87.json<br>
http://52bsj.vip:98/wuai<br>
https://pastebin.com/raw/gtbKvnE1（广告）<br>
https://cdn.jsdelivr.net/gh/GaiVmao/dianshiyuan@main/yuan2.txt（广告）<br>
https://raw.iqiq.io/liu673cn/box/main/m.json<br>
https://raw.iqiq.io/zhanghong1983/TVBOXZY/main/TVBOX/iqiqgr.json<br>
https://raw.githubusercontent.com/tv-player/tvbox-line/main/tv/ptest.json&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow ugc&quot;&gt;https://ghproxy.com/https://raw.githubusercontent.com/tv-player/tvbox-line/main/tv/ptest.json<br>
https://raw.githubusercontent.com/tv-player/tvbox-line/main/tv/ikbb.json&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer nofollow ugc&quot;&gt;https://ghproxy.com/https://raw.githubusercontent.com/tv-player/tvbox-line/main/tv/ikbb.json<br>
https://wds.ecsxs.com/223843.txt<br>
https://pastebin.com/raw/gtbKvnE1<br>
https://pastebin.com/raw/sbPpDm9G<br>
https://agit.ai/hu/hcr/raw/branch/master/MMM.txt<br>
https://freed.yuanhsing.cf/TVBox/meowcf.json<br>
https://github.com/YuanHsing/freed/raw/master/TVBox/meow.json<br>
https://dxawi.github.io/0/0.json<br>
https://raw.githubusercontent.com/UndCover/PyramidStore/main/py.json<br>
https://raw.iqiq.io/lm317379829/PyramidStore/pyramid/py.json<br>
https://leezn.github.io/TVBox/py.json<br>
https://leezn.github.io/TVBox/js.json</p>
<p>链接：https://pan.quark.cn/s/b6a4b17e74dc</p>
<p>参考链接：https://www.wpzyk.cn/thread-110648.htm?sort=asc</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用ffmpeg批量删除音视频的片头片尾]]></title>
        <id>https://blog.margrop.net/post/ffmpeg-cut-video/</id>
        <link href="https://blog.margrop.net/post/ffmpeg-cut-video/">
        </link>
        <updated>2023-04-02T03:51:41.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="步骤">步骤</h1>
<h2 id="1-下载ffmpeg">1. 下载ffmpeg</h2>
<ul>
<li>步骤略</li>
</ul>
<h2 id="2-编辑bat脚本">2. 编辑Bat脚本</h2>
<pre><code class="language-bat">@echo off &amp; setlocal enabledelayedexpansion

rem ===================需手动设置===================
rem 设定片头片尾长度，格式为 HH:mm:ss.fff
set &quot;s1=00:01:07.0&quot;
set &quot;s2=00:01:30.0&quot;
rem ================================================

for /f &quot;tokens=1-4delims=:.&quot; %%a in (&quot;%s2%&quot;) do (
    set /a &quot;t2=(1%%a %% 100 *3600 + 1%%b %% 100 * 60 + 1%%c %% 100) * 1000 + 1%%d %% 1000&quot;
)

md myvideo 2&gt;nul
for %%i in (*.avi *.mkv *.mp4 *.flv) do (
    for /f &quot;tokens=2-5delims=:., &quot; %%a in ('ffmpeg -i &quot;%%i&quot; 2^&gt;^&amp;1 ^| find &quot;Duration:&quot;') do (
        set /a &quot;t=(1%%a%%100*3600+1%%b%%100*60+1%%c%%100)*1000+1%%d0%%1000,t-=t2,ms=t%%1000,t/=1000&quot;
        set /a h=t/3600,m=t%%3600/60,s=t%%60,h+=100,m+=100,s+=100,ms+=1000
        set &quot;t=!h:~1!:!m:~1!:!s:~1!.!ms:~1!&quot;
        ffmpeg -ss !s1! -to !t! -accurate_seek -i &quot;%%i&quot;  -c copy -avoid_negative_ts 1 &quot;myvideo\%%i&quot; -y
    )
)
pause
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h1 id="步骤">步骤</h1>
<h2 id="1-下载ffmpeg">1. 下载ffmpeg</h2>
<ul>
<li>步骤略</li>
</ul>
<h2 id="2-编辑bat脚本">2. 编辑Bat脚本</h2>
<pre><code class="language-bat">@echo off &amp; setlocal enabledelayedexpansion

rem ===================需手动设置===================
rem 设定片头片尾长度，格式为 HH:mm:ss.fff
set &quot;s1=00:01:07.0&quot;
set &quot;s2=00:01:30.0&quot;
rem ================================================

for /f &quot;tokens=1-4delims=:.&quot; %%a in (&quot;%s2%&quot;) do (
    set /a &quot;t2=(1%%a %% 100 *3600 + 1%%b %% 100 * 60 + 1%%c %% 100) * 1000 + 1%%d %% 1000&quot;
)

md myvideo 2&gt;nul
for %%i in (*.avi *.mkv *.mp4 *.flv) do (
    for /f &quot;tokens=2-5delims=:., &quot; %%a in ('ffmpeg -i &quot;%%i&quot; 2^&gt;^&amp;1 ^| find &quot;Duration:&quot;') do (
        set /a &quot;t=(1%%a%%100*3600+1%%b%%100*60+1%%c%%100)*1000+1%%d0%%1000,t-=t2,ms=t%%1000,t/=1000&quot;
        set /a h=t/3600,m=t%%3600/60,s=t%%60,h+=100,m+=100,s+=100,ms+=1000
        set &quot;t=!h:~1!:!m:~1!:!s:~1!.!ms:~1!&quot;
        ffmpeg -ss !s1! -to !t! -accurate_seek -i &quot;%%i&quot;  -c copy -avoid_negative_ts 1 &quot;myvideo\%%i&quot; -y
    )
)
pause
</code></pre>
<!-- more -->
<h2 id="3-运行bat脚本">3. 运行bat脚本</h2>
<h1 id="来源">来源</h1>
<p><a href="https://blog.zhheo.com/p/4f4d0864.html">https://blog.zhheo.com/p/4f4d0864.html</a><br>
<a href="https://wwa.lanzoui.com/i65Ucnq7kta">https://wwa.lanzoui.com/i65Ucnq7kta</a>原作者分享链接，密码：6fpt<br>
<a href="https://zhheo.lanzouo.com/iZ7PNxftu2j">https://zhheo.lanzouo.com/iZ7PNxftu2j</a>防丢博主备份链接</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[gitlab-ci-yml配置说明（官方文档翻译）]]></title>
        <id>https://blog.margrop.net/post/gitlab-ci-variables/</id>
        <link href="https://blog.margrop.net/post/gitlab-ci-variables/">
        </link>
        <updated>2023-04-02T01:02:29.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="重要的内置变量">重要的内置变量</h2>
<p><code>CI_COMMIT_REF_NAME</code>: The branch or tag name for which project is built.<br>
<code>CI_CONFIG_PATH</code>: The path to the CI/CD configuration file. Defaults to .gitlab-ci.yml. Read-only inside a running pipeline.<br>
<code>CI_PROJECT_PATH</code>: The project namespace with the project name included.<br>
<code>CI_BUILDS_DIR</code>: The top-level directory where builds are executed.<br>
<code>CI_PROJECT_DIR</code>: The full path the repository is cloned to, and where the job runs from. If the GitLab Runner builds_dir parameter is set, this variable is set relative to the value of builds_dir. For more information, see the Advanced GitLab Runner configuration.</p>
]]></summary>
        <content type="html"><![CDATA[<h2 id="重要的内置变量">重要的内置变量</h2>
<p><code>CI_COMMIT_REF_NAME</code>: The branch or tag name for which project is built.<br>
<code>CI_CONFIG_PATH</code>: The path to the CI/CD configuration file. Defaults to .gitlab-ci.yml. Read-only inside a running pipeline.<br>
<code>CI_PROJECT_PATH</code>: The project namespace with the project name included.<br>
<code>CI_BUILDS_DIR</code>: The top-level directory where builds are executed.<br>
<code>CI_PROJECT_DIR</code>: The full path the repository is cloned to, and where the job runs from. If the GitLab Runner builds_dir parameter is set, this variable is set relative to the value of builds_dir. For more information, see the Advanced GitLab Runner configuration.</p>
<!-- more -->
<h2 id="gitlab-ci-yml配置说明官方文档翻译">gitlab-ci-yml配置说明（官方文档翻译）</h2>
<p><a href="https://github.com/szyhf/gitlab-study/blob/master/gitlab-ci.yml%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E.md">https://github.com/szyhf/gitlab-study/blob/master/gitlab-ci.yml配置说明.md</a></p>
<h2 id="gradle-init-命令">gradle init 命令</h2>
<p><a href="https://docs.gradle.org/current/samples/sample_building_java_applications_multi_project.html">https://docs.gradle.org/current/samples/sample_building_java_applications_multi_project.html</a></p>
<h2 id="gitlab-ci流水线配置文件gitlab-ciyml详解">GitLab CI流水线配置文件.gitlab-ci.yml详解</h2>
<p><a href="https://meigit.readthedocs.io/en/latest/gitlab_ci_.gitlab-ci.yml_detail.html">https://meigit.readthedocs.io/en/latest/gitlab_ci_.gitlab-ci.yml_detail.html</a></p>
<h2 id="更多关于变量的说明">更多关于变量的说明</h2>
<p><a href="https://docs.gitlab.com/ce/ci/variables/README.html">https://docs.gitlab.com/ce/ci/variables/README.html</a></p>
<p><a href="https://docs.gitlab.com/ee/ci/variables/predefined_variables.html">https://docs.gitlab.com/ee/ci/variables/predefined_variables.html</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[logback 自定义添加 logstash 字段]]></title>
        <id>https://blog.margrop.net/post/logback-zi-ding-yi-tian-jia-logstash-zi-duan/</id>
        <link href="https://blog.margrop.net/post/logback-zi-ding-yi-tian-jia-logstash-zi-duan/">
        </link>
        <updated>2023-04-02T00:57:41.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="步骤">步骤</h1>
<h2 id="如果想在输出的json中加上自定义字段需要配置arguments参数">如果想在输出的JSON中，加上自定义字段，需要配置arguments参数</h2>
<pre><code class="language-xml">&lt;encoder class=&quot;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder&quot;&gt;
        &lt;providers&gt;
            &lt;pattern&gt;
                &lt;pattern&gt;
                    {
                    &quot;timestamp&quot;: &quot;%date{\&quot;yyyy-MM-dd HH:mm:ss\&quot;}&quot;,
                    &quot;log_level&quot;: &quot;%level&quot;,
                    &quot;class_name&quot;: &quot;%class&quot;,
                    &quot;thread&quot;: &quot;%thread&quot;,
                    &quot;message&quot;: &quot;%message&quot;,
                    &quot;stack_trace&quot;: &quot;%exception{5}&quot;
                    }
                &lt;/pattern&gt;
            &lt;/pattern&gt;
            &lt;arguments/&gt;
        &lt;/providers&gt;
    &lt;/encoder&gt;
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h1 id="步骤">步骤</h1>
<h2 id="如果想在输出的json中加上自定义字段需要配置arguments参数">如果想在输出的JSON中，加上自定义字段，需要配置arguments参数</h2>
<pre><code class="language-xml">&lt;encoder class=&quot;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder&quot;&gt;
        &lt;providers&gt;
            &lt;pattern&gt;
                &lt;pattern&gt;
                    {
                    &quot;timestamp&quot;: &quot;%date{\&quot;yyyy-MM-dd HH:mm:ss\&quot;}&quot;,
                    &quot;log_level&quot;: &quot;%level&quot;,
                    &quot;class_name&quot;: &quot;%class&quot;,
                    &quot;thread&quot;: &quot;%thread&quot;,
                    &quot;message&quot;: &quot;%message&quot;,
                    &quot;stack_trace&quot;: &quot;%exception{5}&quot;
                    }
                &lt;/pattern&gt;
            &lt;/pattern&gt;
            &lt;arguments/&gt;
        &lt;/providers&gt;
    &lt;/encoder&gt;
</code></pre>
<!-- more -->
<h2 id="markers提供的标记">Markers提供的标记</h2>
<pre><code class="language-java">import static net.logstash.logback.marker.Markers.*

 /*
 * Add &quot;name&quot;:&quot;value&quot; to the JSON output.
 */
logger.info(append(&quot;name&quot;, &quot;value&quot;), &quot;log message&quot;);

/*
 * Add &quot;name1&quot;:&quot;value1&quot;,&quot;name2&quot;:&quot;value2&quot; to the JSON output by using multiple markers.
 */
logger.info(append(&quot;name1&quot;, &quot;value1&quot;).and(append(&quot;name2&quot;, &quot;value2&quot;)), &quot;log message&quot;);
</code></pre>
<h1 id="来源">来源</h1>
<p><a href="https://bloodhunter.github.io/2019/02/01/logback-pei-zhi/">https://bloodhunter.github.io/2019/02/01/logback-pei-zhi/</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mysql online DDL 线上无锁添加索引]]></title>
        <id>https://blog.margrop.net/post/mysql-online-ddl-create-index-without-lock/</id>
        <link href="https://blog.margrop.net/post/mysql-online-ddl-create-index-without-lock/">
        </link>
        <updated>2023-04-02T00:51:17.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="步骤">步骤</h1>
<p>只能通过ALTER TABLE不能create index</p>
<pre><code>ALTER TABLE tbl_name ADD INDEX (column), ALGORITHM=INPLACE, LOCK=NONE;
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h1 id="步骤">步骤</h1>
<p>只能通过ALTER TABLE不能create index</p>
<pre><code>ALTER TABLE tbl_name ADD INDEX (column), ALGORITHM=INPLACE, LOCK=NONE;
</code></pre>
<!-- more -->
<h2 id="参数说明">参数说明：</h2>
<p><code>ALGORITHM=INPLACE</code><br>
更优秀的解决方案，在当前表加索引，步骤：<br>
1.创建索引(二级索引)数据字典<br>
2.加共享表锁，禁止DML，允许查询<br>
3.读取聚簇索引，构造新的索引项，排序并插<br>
入新索引<br>
4.等待打开当前表的所有只读事务提交<br>
5.创建索引结束</p>
<p><code>ALGORITHM=COPY</code><br>
通过临时表创建索引，需要多一倍存储，还有更多的IO，步骤：<br>
1.新建带索引（主键索引）的临时表<br>
2.锁原表，禁止DML，允许查询<br>
3.将原表数据拷贝到临时表<br>
4.禁止读写,进行rename，升级字典锁<br>
5.完成创建索引操作</p>
<p><code>LOCK=DEFAULT</code>：默认方式，MySQL自行判断使用哪种LOCK模式，尽量不锁表<br>
<code>LOCK=NONE</code>：无锁：允许Online DDL期间进行并发读写操作。如果Online DDL操<br>
作不支持对表的继续写入，则DDL操作失败，对表修改无效<br>
<code>LOCK=SHARED</code>：共享锁：Online DDL操作期间堵塞写入，不影响读取<br>
<code>LOCK=EXCLUSIVE</code>：排它锁：Online DDL操作期间不允许对锁表进行任何操作</p>
<h1 id="来源">来源</h1>
<p><a href="https://dev.mysql.com/doc/refman/8.0/en/create-index.html">https://dev.mysql.com/doc/refman/8.0/en/create-index.html</a><br>
<a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-operations.html#online-ddl-index-syntax-notes">https://dev.mysql.com/doc/refman/8.0/en/innodb-online-ddl-operations.html#online-ddl-index-syntax-notes</a><br>
<a href="https://stackoverflow.com/questions/4244685/create-an-index-on-a-huge-mysql-production-table-without-table-locking">https://stackoverflow.com/questions/4244685/create-an-index-on-a-huge-mysql-production-table-without-table-locking</a><br>
<a href="https://www.jianshu.com/p/81d7d7ed6d86">https://www.jianshu.com/p/81d7d7ed6d86</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[常用Github开源项目推荐]]></title>
        <id>https://blog.margrop.net/post/github-project-stars/</id>
        <link href="https://blog.margrop.net/post/github-project-stars/">
        </link>
        <updated>2023-03-25T10:29:55.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="bbdown">BBDown</h1>
<p>一款命令行式哔哩哔哩下载器. Bilibili Downloader.<br>
<a href="https://github.com/nilaoda/BBDown">https://github.com/nilaoda/BBDown</a></p>
<h1 id="ios日历增强中国节假日补班日历">iOS日历增强——中国节假日补班日历</h1>
<p>中国节假日补班日历<br>
<a href="https://github.com/lanceliao/china-holiday-calender">https://github.com/lanceliao/china-holiday-calender</a></p>
<h1 id="cpu单核跑分天梯图">CPU单核跑分天梯图</h1>
<p>本图收集了常见CPU型号单核跑分图，包括英特尔 酷睿(Intel Core)桌面处理器系列， 英特尔 酷睿(Intel Core)移动处理器系列和AMD 锐龙(Ryzen)处理器系列。<br>
<a href="https://github.com/mediv01/CPU-Single-Core-Benchmark">https://github.com/mediv01/CPU-Single-Core-Benchmark</a></p>
<h1 id="homebrew国内快速安装">Homebrew国内快速安装</h1>
<p><a href="https://github.com/ineo6/homebrew-install">https://github.com/ineo6/homebrew-install</a></p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="bbdown">BBDown</h1>
<p>一款命令行式哔哩哔哩下载器. Bilibili Downloader.<br>
<a href="https://github.com/nilaoda/BBDown">https://github.com/nilaoda/BBDown</a></p>
<h1 id="ios日历增强中国节假日补班日历">iOS日历增强——中国节假日补班日历</h1>
<p>中国节假日补班日历<br>
<a href="https://github.com/lanceliao/china-holiday-calender">https://github.com/lanceliao/china-holiday-calender</a></p>
<h1 id="cpu单核跑分天梯图">CPU单核跑分天梯图</h1>
<p>本图收集了常见CPU型号单核跑分图，包括英特尔 酷睿(Intel Core)桌面处理器系列， 英特尔 酷睿(Intel Core)移动处理器系列和AMD 锐龙(Ryzen)处理器系列。<br>
<a href="https://github.com/mediv01/CPU-Single-Core-Benchmark">https://github.com/mediv01/CPU-Single-Core-Benchmark</a></p>
<h1 id="homebrew国内快速安装">Homebrew国内快速安装</h1>
<p><a href="https://github.com/ineo6/homebrew-install">https://github.com/ineo6/homebrew-install</a></p>
<!-- more -->
<h1 id="win系列kms激活工具">Win系列KMS激活工具</h1>
<p>KMS Server<br>
<a href="https://github.com/Wind4/vlmcsd">https://github.com/Wind4/vlmcsd</a></p>
<h1 id="authy导出工具">Authy导出工具</h1>
<p>This is a Go library that allows you to access your Authy TOTP tokens.<br>
<a href="https://github.com/alexzorin/authy">https://github.com/alexzorin/authy</a></p>
<h1 id="home-assistant-的巴法云插件">Home Assistant 的巴法云插件</h1>
<p>将 Home Assistant 实体同步至巴法云，并使用小爱同学/天猫精灵/小度音箱控制。<br>
<a href="https://github.com/larry-wong/bemfa">https://github.com/larry-wong/bemfa</a></p>
<h1 id="bt之家">BT之家</h1>
<p>BT之家入口页<br>
<a href="https://github.com/sesezy/bthome/wiki">https://github.com/sesezy/bthome/wiki</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 v2ray 配置内网访问——基于公网IP]]></title>
        <id>https://blog.margrop.net/post/v2ray-visit-lan/</id>
        <link href="https://blog.margrop.net/post/v2ray-visit-lan/">
        </link>
        <updated>2023-03-25T07:44:58.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="前提条件">前提条件：</h1>
<ul>
<li>有公网IP</li>
</ul>
<h1 id="需求">需求</h1>
<ul>
<li>需要进行安全的内网访问</li>
<li>需要加密流量</li>
<li>支持 TCP / UDP</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h1 id="前提条件">前提条件：</h1>
<ul>
<li>有公网IP</li>
</ul>
<h1 id="需求">需求</h1>
<ul>
<li>需要进行安全的内网访问</li>
<li>需要加密流量</li>
<li>支持 TCP / UDP</li>
</ul>
<!-- more -->
<p><em>注：下面的UUID和端口号，请自行修改</em></p>
<h1 id="v2ray配置文件server端">v2ray配置文件[Server端]</h1>
<pre><code>{
    &quot;inbounds&quot;: [
        {
            &quot;port&quot;: 12345,
            &quot;listen&quot;: &quot;0.0.0.0&quot;,
            &quot;protocol&quot;: &quot;vmess&quot;,
            &quot;settings&quot;: {
                &quot;clients&quot;: [
                    {
                        &quot;id&quot;: &quot;643773f3-568d-4655-bc48-a75afb2eccdd&quot;,
                        &quot;level&quot;: 1,
                        &quot;alterId&quot;: 16
                    }
                ]
            }
        },
        {
            &quot;port&quot;: 12345,
            &quot;listen&quot;: &quot;0.0.0.0&quot;,
            &quot;protocol&quot;: &quot;vmess&quot;,
            &quot;settings&quot;: {
                &quot;clients&quot;: [
                    {
                        &quot;id&quot;: &quot;643773f3-568d-4655-bc48-a75afb2eccdd&quot;,
                        &quot;level&quot;: 1,
                        &quot;alterId&quot;: 16
                    }
                ]
            },
            &quot;streamSettings&quot;: {
                &quot;network&quot;: &quot;mkcp&quot;,
                &quot;kcpSettings&quot;: {
                    &quot;uplinkCapacity&quot;: 200,
                    &quot;downlinkCapacity&quot;: 30,
                    &quot;congestion&quot;: true,
                    &quot;header&quot;: {
                        &quot;type&quot;: &quot;none&quot;
                    }
                }
            }
        }
    ],
    &quot;outbounds&quot;: [
        {
            &quot;protocol&quot;: &quot;freedom&quot;,
            &quot;settings&quot;: {}
        }
    ]
}
</code></pre>
<h1 id="v2ray配置client端">v2ray配置[Client端]</h1>
<p>端口号：12345<br>
UUID：643773f3-568d-4655-bc48-a75afb2eccdd<br>
传输方式：tcp / mkcp<br>
额外ID：0<br>
UDP转发：打开<br>
TLS：关闭<br>
多路复用：关闭<br>
TCP快速打开：关闭<br>
算法：auto</p>
<h1 id="增加防火墙配置端口">增加防火墙配置端口</h1>
<pre><code>firewall-cmd --zone=public --add-port=12345/tcp --permanent
firewall-cmd --zone=public --add-port=12345/udp --permanent
firewall-cmd --reload
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu / CentOS 磁盘根目录在线扩容 & 修改分区 inode 数量]]></title>
        <id>https://blog.margrop.net/post/ubuntu-lv-extend-and-resize-inode/</id>
        <link href="https://blog.margrop.net/post/ubuntu-lv-extend-and-resize-inode/">
        </link>
        <updated>2023-03-25T05:42:44.000Z</updated>
        <summary type="html"><![CDATA[<p>Ubuntu 作为服务器系统使用的时候，系统盘的空间可能并不是很充裕，apt apt 着，根目录就满了。诚然，增加磁盘 / 分区并挂载是一个方案，但并不能解决所有问题（例如 apt）。同时，一些跑在云平台上的服务器并没有很好的离线操作磁盘的手段，这时候在线扩容就显得极为必要了。</p>
<p><strong>数据无价！对磁盘进行任何操作前，请务必做好备份！</strong></p>
<h1 id="0-简要操作步骤">0. 简要操作步骤</h1>
<pre><code class="language-shell">#系统分区扩容
parted -l
fdisk -l
cfdisk

#扩容块（sda3）
lsblk
pvresize /dev/sda3
lsblk

#扩容lv和vg（Ubuntu）
lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv
resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv
df -h

#扩容lv和vg（CentOS）
lvextend -l +100%FREE /dev/mapper/centos-root
resize2fs /dev/mapper/centos-root
df -h
</code></pre>
<h1 id="1-磁盘根目录在线扩容">1. 磁盘根目录在线扩容</h1>
<p>操作环境：Proxmox VE 虚拟化 / Ubuntu 22.04.5 LTS / GPT 分区表 / ext4 分区</p>
]]></summary>
        <content type="html"><![CDATA[<p>Ubuntu 作为服务器系统使用的时候，系统盘的空间可能并不是很充裕，apt apt 着，根目录就满了。诚然，增加磁盘 / 分区并挂载是一个方案，但并不能解决所有问题（例如 apt）。同时，一些跑在云平台上的服务器并没有很好的离线操作磁盘的手段，这时候在线扩容就显得极为必要了。</p>
<p><strong>数据无价！对磁盘进行任何操作前，请务必做好备份！</strong></p>
<h1 id="0-简要操作步骤">0. 简要操作步骤</h1>
<pre><code class="language-shell">#系统分区扩容
parted -l
fdisk -l
cfdisk

#扩容块（sda3）
lsblk
pvresize /dev/sda3
lsblk

#扩容lv和vg（Ubuntu）
lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv
resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv
df -h

#扩容lv和vg（CentOS）
lvextend -l +100%FREE /dev/mapper/centos-root
resize2fs /dev/mapper/centos-root
df -h
</code></pre>
<h1 id="1-磁盘根目录在线扩容">1. 磁盘根目录在线扩容</h1>
<p>操作环境：Proxmox VE 虚拟化 / Ubuntu 22.04.5 LTS / GPT 分区表 / ext4 分区</p>
<!-- more -->
<h2 id="11-增大物理磁盘容量">1.1 增大物理磁盘容量</h2>
<p>这部分没什么好说的，虚拟机就在设置里改，云平台就在对应的平台修改。修改好之后 Ubuntu 应该就可以直接识别到新的容量了。</p>
<h2 id="12-将容量合并进分区">1.2 将容量合并进分区</h2>
<p>首先运行  <code>fdisk -l</code>  命令查看磁盘容量是否被识别：</p>
<figure data-type="image" tabindex="1"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_1.png" alt="" loading="lazy"></figure>
<p>从上图可以看到，磁盘容量已被正确识别为 64GiB，但分区表记录的磁盘容量仍为扩容前的 40GiB（见红色提示，错误已被识别到），分区大小也是同样的 40G。</p>
<h2 id="13-修复分区表">1.3 修复分区表</h2>
<p>运行  <code>parted -l</code>  查看分区情况。<br>
parted 会立即提示磁盘的空间并没有被全部使用，这里输入 Fix 后回车，修复一下 GPT 分区表。</p>
<figure data-type="image" tabindex="2"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_2.png" alt="" loading="lazy"></figure>
<p>从上图中已经可以看到，分区表记录的磁盘容量已经正常。</p>
<h2 id="131-检查并充值">1.3.1 检查并充值</h2>
<p>运行<code>lsblk</code> 命令查看变化</p>
<p>运行<code>pvresize /dev/sda3</code>命令将<code>partition</code>增加的容量&quot;充值&quot;到PV中</p>
<h2 id="14-扩容分区">1.4 扩容分区</h2>
<p>现在就可以将空闲的磁盘容量合并到分区里了，这里利用界面和操作都更加友好的 <code>cfdisk</code> 来进行操作。<br>
按上下键选中要扩容的分区，再按左右键选择 Resize 操作，回车。<code>cfdisk</code> 应该会自动填写此分区与未分配空间的总容量，也可以自己输入扩容后的大小，回车即可。</p>
<figure data-type="image" tabindex="3"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_3.png" alt="" loading="lazy"></figure>
<p>下图中的 sda2 分区已经变为 64G，分区扩容完毕。但此时的所有操作仅在内存中完成，我们需要选择 Write 来将更改保存到分区表。写入后退出 <code>cfdisk</code>。</p>
<figure data-type="image" tabindex="4"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_4.png" alt="" loading="lazy"></figure>
<p>再次执行 <code>fdisk -l</code> ，可见分区容量已变为 64G。</p>
<h2 id="15-扩容文件系统">1.5 扩容文件系统</h2>
<p>此时扩容并未结束，因为文件系统记录的分区容量仍为 40G，我们需要让文件系统知道分区已被扩容。</p>
<figure data-type="image" tabindex="5"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_5.png" alt="" loading="lazy"></figure>
<p>这里需要用到 <code>resize2fs</code>，以我的磁盘 sda2 为例，执行以下命令：</p>
<pre><code>resize2fs -p /dev/sda2
</code></pre>
<figure data-type="image" tabindex="6"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_6.png" alt="" loading="lazy"></figure>
<p>等待操作完成即可。根据上图提示，我们已经完成了对文件系统的在线扩容。</p>
<h2 id="16-q-a">1.6 Q &amp; A</h2>
<p>若执行 <code>resize2fs -p /dev/sda2</code> 命令时，出现下面的错误提示</p>
<pre><code>resize2fs 1.42.9 (28-Dec-2013)
resize2fs: Bad magic number in super-block while trying to open /dev/centos/root
Couldn't find valid filesystem superblock.
</code></pre>
<p>检查 /dev/centos/root 文件系统，发现是xfs，如下;</p>
<pre><code># mount |grep root
</code></pre>
<p>提示如下：</p>
<pre><code>/dev/mapper/centos-root on / type xfs (rw,relatime,attr2,inode64,noquota)
</code></pre>
<p>xfs的文件系统重新定义大小用如下命令：</p>
<pre><code># xfs_growfs /dev/mapper/centos-root 
</code></pre>
<p>提示如下：</p>
<pre><code>meta-data=/dev/mapper/centos-root isize=256 agcount=4, agsize=3276800 blks
 = sectsz=512 attr=2, projid32bit=1
 = crc=0 finobt=0
data = bsize=4096 blocks=13107200, imaxpct=25
 = sunit=0 swidth=0 blks
naming =version 2 bsize=4096 ascii-ci=0 ftype=0
log =internal bsize=4096 blocks=6400, version=2
 = sectsz=512 sunit=0 blks, lazy-count=1
realtime =none extsz=4096 blocks=0, rtextents=0
data blocks changed from 13107200 to 39336960
</code></pre>
<p>重新进行df -h查看挂载点，发现大小已经更改。</p>
<h1 id="2-逻辑分区扩容">2. 逻辑分区扩容</h1>
<p>显示当前容量</p>
<pre><code>vgdisplay
</code></pre>
<p>结果显示为</p>
<pre><code>  --- Volume group ---
  VG Name               ubuntu-vg
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  2
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               1
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               &lt;96.95 GiB
  PE Size               4.00 MiB
  Total PE              24818
  Alloc PE / Size       12409 / 48.47 GiB
  Free  PE / Size       12409 / 48.47 GiB
  VG UUID               0r0B09-AHil-bc9D-fXtF-o3Y3-MjZj-T10Sf9
</code></pre>
<h2 id="22-选择全部扩容">2.2 选择全部扩容</h2>
<p>扩展逻辑卷的逻辑边界</p>
<pre><code>lvextend -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv
</code></pre>
<h2 id="23-使用resizefs2命令重新加载逻辑卷的大小才能生效">2.3 使用<code>resizefs2</code>命令重新加载逻辑卷的大小才能生效</h2>
<pre><code>resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv
</code></pre>
<h1 id="3-修改磁盘-inode">3. 修改磁盘 inode</h1>
<p><strong>对于 ext4 文件系统，inode 会在格式化时被写死，若要修改必须重新格式化，丢失所有数据，请务必注意。</strong><br>
<code>xfs</code> 等文件系统提供 inode 的动态扩展功能。</p>
<h2 id="31-查看磁盘-inode-情况">3.1 查看磁盘 inode 情况</h2>
<p>运行  <code>df -i</code> 查看各个分区的 inode 使用情况。</p>
<figure data-type="image" tabindex="7"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_7.png" alt="" loading="lazy"></figure>
<p>从上图可以看到我的 sdc1 分区已经用尽了所有 4,194,304 个 inode，此时表现为<code>无法写入任何数据</code>，提示<code>磁盘已满</code>（即使仍有可用空间）。</p>
<h2 id="32-重新格式化分区">3.2 重新格式化分区</h2>
<p>在格式化分区的时候，可以利用 -N 参数指定 inode 数量。<br>
以格式化 sdb1 为具有 16,777,216 个 inode 的 ext4 分区为例，执行以下命令：</p>
<pre><code>mkfs.ext4 /dev/sdb1 -N 16777216
</code></pre>
<p>mkfs 会提示磁盘已存在格式化后的文件系统，确认后等待格式化完成即可。</p>
<figure data-type="image" tabindex="8"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_8.png" alt="" loading="lazy"></figure>
<h2 id="33-检查-inode-数量">3.3 检查 inode 数量</h2>
<p>运行以下命令：</p>
<pre><code>dump2fs -h /dev/sdb1 | grep node
</code></pre>
<p>结果如下图，可以看到 <code>Inode count</code> 一项已经变为我们指定的值。</p>
<figure data-type="image" tabindex="9"><img src="https://blog.margrop.net/post-images/ubuntu_disk_resize_inode/step_9.png" alt="" loading="lazy"></figure>
<h1 id="来源">来源</h1>
<p><a href="https://www.npbeta.com/2020/12/ubuntu_disk_resize_inode/">https://www.npbeta.com/2020/12/ubuntu_disk_resize_inode/</a><br>
<a href="https://blog.90.vc/archives/164">https://blog.90.vc/archives/164</a><br>
<a href="https://zhuanlan.zhihu.com/p/161533381?utm_id=0">https://zhuanlan.zhihu.com/p/161533381?utm_id=0</a></p>
]]></content>
    </entry>
</feed>